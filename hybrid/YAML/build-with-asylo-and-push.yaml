apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build-with-asylo-and-push
spec:
  params:
    - name: pathToDockerFile
      type: string
      description: The path to the dockerfile to build
      default: $(resources.inputs.docker-source.path)/Dockerfile
    - name: pathToContext
      type: string
      description: |
        The build context used by Kaniko
        (https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)
      default: $(resources.inputs.docker-source.path)
  # workspaces:
  #   - name: output
  resources:
    inputs:
      - name: docker-source
        type: git
    outputs:
      - name: builtImage
        type: image
  steps:
    - name: build-and-push
      # image: gcr.io/kaniko-project/executor:latest
      image: misaelvf2/kaniko-in-toto
      # specifying DOCKER_CONFIG is required to allow kaniko to detect docker credential
      env:
        - name: "DOCKER_CONFIG"
          value: "/tekton/home/.docker/"
      script: |
        #!/usr/bin/env bash
        in-toto-run -s --verbose -n build_push --key build_push -- executor --skip-tls-verify --dockerfile=$(params.pathToDockerFile) \
        --destination=$(resources.outputs.builtImage.url) --context=$(params.pathToContext) --build-arg=BASE=alpine:3
        # cp *.link $(workspaces.output.path)
      # command: ["in-toto-run", "-n", "build_push", "--key", "build_push", "--metadata-directory", "$(workspaces.messages.path)/message", "--", "executor"]
      # command:
      #   - /kaniko/executor
      # args:
      #   - --dockerfile=$(params.pathToDockerFile)
      #   - --destination=$(resources.outputs.builtImage.url)
      #   - --context=$(params.pathToContext)
      #   - --build-arg=BASE=alpine:3
